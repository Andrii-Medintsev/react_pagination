{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pagesToDisplay","Array","Math","ceil","map","_","i","className","classNames","disabled","href","onClick","page","active","length","items","from","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","itemsToDisplay","splice","firstVisibleItem","split","lastVisibleItem","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,aACX,EACEC,EACF,YAAIC,MAAMC,KAAKC,KAAKP,EAAQC,KAAWO,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAkB7D,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBX,IAHhB,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QA7BkB,WACJ,IAAhBb,GAIJC,EAAaD,EAAc,IAmBvB,oBAWDE,EAAeI,KAAI,SAACQ,GAAD,OAClB,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQf,IAAgBc,IAH9B,SAOE,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMZ,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBACEL,UAAWC,IACT,YACA,CAAEC,SAAUX,IAAgBE,EAAec,SAH/C,SAME,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBE,EAAec,OAC9CH,QAzDkB,WACpBb,IAAgBE,EAAec,QAInCf,EAAaD,EAAc,IA+CvB,wBC1ER,IAAMiB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIjB,KAAI,SAAAe,GAAC,qBAAYA,MAEpCG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB4B,EAApB,KAEMC,EAAiB,YAAIZ,GACxBa,OAAQJ,EAAe1B,EAAe0B,EAAcA,GAEjDK,EAAmBF,EAAe,GAAGG,MAAM,KAAK,GAChDC,EACFJ,EAAeA,EAAeb,OAAS,GAAGgB,MAAM,KAAK,GAEzD,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiC+B,EADjC,cACuDE,EADvD,eAC6EhB,EAAMD,OADnF,OAIA,sBAAKP,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,OAC9BP,EAAe,IAPnB,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOmB,EAAMD,OACbjB,QAAS2B,EACT1B,YAAaA,EACbC,aAAc2B,IAGhB,6BACGC,EAAeW,MAAM,EAAGd,GAAcpB,KAAI,SAAAmC,GAAI,OAC7C,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YExDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1906a535.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (pageNum: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => {\n  const pagesToDisplay\n    = [...Array(Math.ceil(total / perPage))].map((_, i) => i + 1);\n\n  const prevButtonhandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  const nextButtonHandler = () => {\n    if (currentPage === pagesToDisplay.length) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevButtonhandler}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesToDisplay.map((page) => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pagesToDisplay.length },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesToDisplay.length}\n          onClick={nextButtonHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsToDisplay = [...items]\n    .splice((itemsPerPage * currentPage) - itemsPerPage, itemsPerPage);\n\n  const firstVisibleItem = itemsToDisplay[0].split(' ')[1];\n  const lastVisibleItem\n    = itemsToDisplay[itemsToDisplay.length - 1].split(' ')[1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstVisibleItem} - ${lastVisibleItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {itemsToDisplay.slice(0, itemsPerPage).map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}